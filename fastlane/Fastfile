# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version '2.100.0'

lane :generateProjectViaSwiftPM do

    # === Regenerate project

    # default initial location for any command
    # is inside 'Fastlane' folder

    sh 'cd ./.. && rm -rf ".build" && rm -rf "XCERepoConfigurator.xcodeproj" && swift package generate-xcodeproj'

    # === Build Phase Script - SwiftLint | 'XCERepoConfigurator' | ./../XCERepoConfigurator.xcodeproj

    begin

        project = Xcodeproj::Project.open("./../XCERepoConfigurator.xcodeproj")

    rescue => ex

        # https://github.com/fastlane/fastlane/issues/7944#issuecomment-274232674
        UI.error ex
        UI.error("Failed to add Build Phase Script - SwiftLint | 'XCERepoConfigurator' | ./../XCERepoConfigurator.xcodeproj")

    end

    project
        .targets
        .select{ |t| ['XCERepoConfigurator'].include?(t.name) }
        .each{ |t|

            thePhase = t.shell_script_build_phases.find { |s| s.name == "SwiftLint" }

            unless thePhase.nil?
                t.build_phases.delete(thePhase)
            end

            thePhase = t.new_shell_script_build_phase("SwiftLint")
            thePhase.shell_script = '"Pods/SwiftLint/swiftlint" --path "Sources/RepoConfigurator"'
            # thePhase.run_only_for_deployment_postprocessing = ...

            t.build_phases.unshift(t.build_phases.delete(thePhase)) # move to top

        }

    project.save()

    UI.success("Added Build Phase Script - SwiftLint | 'XCERepoConfigurator' | ./../XCERepoConfigurator.xcodeproj")

    # ===

    cocoapods # https://docs.fastlane.tools/actions/cocoapods/
    # NOTE: Origin path MUST be absolute in order the symlink to work properly!
    sh 'cd ./.. && ln -sf "$PWD/.swiftlint.yml" "Sources/RepoConfigurator/.swiftlint.yml"'

end # lane :generateProjectViaSwiftPM